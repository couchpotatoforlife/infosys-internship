# -*- coding: utf-8 -*-
"""Assignment 1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i7jhRUn5Eee36hvrtc-98eSBitqAAeq9
"""



"""## Practice on Pandas and Data Visualization

- 1. What is the overall survival rate of passengers aboard the Titanic?
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# Load Titanic dataset (you can replace with your local CSV if needed)
import seaborn as sns
df = sns.load_dataset("titanic")


# Overall survival rate
survival_rate = df['survived'].mean()
print("Overall Survival Rate:", survival_rate)

"""- 2. How does the survival rate vary by passenger class (Pclass)?"""

print(df.groupby('pclass')['survived'].mean())

"""- 3. What is the average age of passengers who survived vs. those who did not survive?"""

print(df.groupby('survived')['age'].mean())

"""- 4. How many passengers embarked from each port (Embarked), and what are their survival rates?"""

print(df['embarked'].value_counts())
print(df.groupby('embarked')['survived'].mean())

"""- 5. What is the distribution of fare prices paid by passengers, and does fare impact survival chances?"""

plt.figure(figsize=(8,5))
sns.histplot(df['fare'], bins=40, kde=True)
plt.title("Distribution of Fare Prices")
plt.show()

plt.figure(figsize=(8,5))
sns.boxplot(x='survived', y='fare', data=df)
plt.title("Fare vs Survival")
plt.show()

"""- 6. Plot the count of passengers by passenger class (Pclass)."""

sns.countplot(x='pclass', data=df)
plt.title("Passenger Count by Class")
plt.show()

"""- 7. Visualize the survival rate with respect to gender using a bar chart."""

sns.barplot(x='sex', y='survived', data=df)
plt.title("Survival Rate by Gender")
plt.show()

"""- 8. Show the age distribution of passengers using a histogram or KDE plot."""

plt.figure(figsize=(8,5))
sns.histplot(df['age'].dropna(), bins=30, kde=True)
plt.title("Age Distribution")
plt.show()

"""- 9. Create a boxplot comparing fares across different passenger classes."""

sns.boxplot(x='pclass', y='fare', data=df)
plt.title("Fares by Passenger Class")
plt.show()

"""- 10. Visualize survival count by embarkation port (Embarked) with a stacked bar chart."""

embark_survival = pd.crosstab(df['embarked'], df['survived'])
embark_survival.plot(kind='bar', stacked=True)
plt.title("Survival Count by Embarkation Port")
plt.xlabel("Embarked")
plt.ylabel("Count")
plt.show()

"""- 11. Display a heatmap of the correlation matrix of numerical features in the dataset."""

plt.figure(figsize=(10,6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm")
plt.title("Correlation Matrix Heatmap")
plt.show()